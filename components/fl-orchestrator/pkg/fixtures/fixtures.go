package fixtures

var RunsResponseNoFLServer = `
{
  "runs": [
    {
      "id": "97ee331f-7d26-4755-a58b-c99b54189e6a",
      "name": "Run of pipeline_fl (95301)",
      "pipeline_spec": {
        "workflow_manifest": "{\"kind\":\"Workflow\",\"apiVersion\":\"argoproj.io/v1alpha1\",\"metadata\":{\"generateName\":\"federated-learning-pipeline-\",\"creationTimestamp\":null,\"labels\":{\"pipelines.kubeflow.org/kfp_sdk_version\":\"1.8.11\",\"pipelines.kubeflow.org/v2_pipeline\":\"true\"},\"annotations\":{\"pipelines.kubeflow.org/kfp_sdk_version\":\"1.8.11\",\"pipelines.kubeflow.org/pipeline_compilation_time\":\"2022-03-01T11:31:04.392518\",\"pipelines.kubeflow.org/pipeline_spec\":\"{\\\"description\\\": \\\"Federated Learning\\\", \\\"inputs\\\": [{\\\"name\\\": \\\"build_context\\\", \\\"type\\\": \\\"String\\\"}, {\\\"name\\\": \\\"image_tag\\\", \\\"type\\\": \\\"String\\\"}, {\\\"default\\\": \\\"3\\\", \\\"name\\\": \\\"num_rounds\\\", \\\"optional\\\": true, \\\"type\\\": \\\"Integer\\\"}, {\\\"default\\\": \\\"\\\", \\\"name\\\": \\\"pipeline-root\\\"}, {\\\"default\\\": \\\"pipeline/federated-learning-pipeline\\\", \\\"name\\\": \\\"pipeline-name\\\"}], \\\"name\\\": \\\"federated-learning-pipeline\\\"}\",\"pipelines.kubeflow.org/v2_pipeline\":\"true\"}},\"spec\":{\"templates\":[{\"name\":\"foo\"},{\"name\":\"bar\"}]}}",
				"parameters": [
          { "name": "build_context" },
          { "name": "image_tag", "value": "foo/bar:1.0" },
          { "name": "num_rounds", "value": "3" },
          { "name": "pipeline-root" },
          { "name": "pipeline-name", "value": "pipeline/pipeline_fl" }
        ]
      },
      "resource_references": [
        {
          "key": {
            "type": "EXPERIMENT",
            "id": "f6ab8928-37b4-4deb-bd7e-2e0d9b32ce15"
          },
          "name": "Default",
          "relationship": "OWNER"
        },
        {
          "key": {
            "type": "PIPELINE_VERSION",
            "id": "43bc990b-5990-4b5a-8d3f-c2090cfbc288"
          },
          "name": "pipeline_fl",
          "relationship": "CREATOR"
        }
      ],
      "service_account": "pipeline-runner",
      "created_at": "2022-03-03T08:15:30Z",
      "scheduled_at": "1970-01-01T00:00:00Z",
      "finished_at": "1970-01-01T00:00:00Z",
      "status": "Running"
    }
  ],
  "total_size": 1
}
`

var RunsResponseOneFLServer = `
{
  "runs": [
    {
      "id": "12345678-5432-4755-a58b-c99b54189e6a",
      "name": "create_fl_client_image 2022-05-09 12-47-58",
      "pipeline_spec": {
        "workflow_manifest": "{\"apiVersion\": \"argoproj.io/v1alpha1\", \"kind\": \"Workflow\", \"metadata\": {\"generateName\": \"create-fl-client-image-\", \"annotations\": {\"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\", \"pipelines.kubeflow.org/pipeline_compilation_time\": \"2022-05-09T12:47:58.994833\", \"pipelines.kubeflow.org/pipeline_spec\": \"{\\\"description\\\": \\\"Creates container images for the federated learning client\\\", \\\"inputs\\\": [{\\\"name\\\": \\\"image_tag\\\", \\\"type\\\": \\\"String\\\"}, {\\\"name\\\": \\\"num_rounds\\\", \\\"type\\\": \\\"Integer\\\"}], \\\"name\\\": \\\"Create FL client image\\\"}\"}, \"labels\": {\"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\"}}, \"spec\": {\"entrypoint\": \"create-fl-client-image\", \"templates\": [{\"name\": \"cleanup-flower-server-infrastructure\", \"container\": {\"args\": [\"kubectl -n katulu-fl delete --ignore-not-found=true virtualservice,svc,cm -l workflows.argoproj.io/workflow={{workflow.name}}\"], \"command\": [\"sh\", \"-c\"], \"image\": \"gcr.io/cloud-builders/kubectl\"}, \"metadata\": {\"labels\": {\"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\", \"pipelines.kubeflow.org/pipeline-sdk-type\": \"kfp\", \"pipelines.kubeflow.org/enable_caching\": \"true\"}, \"annotations\": {\"pipelines.kubeflow.org/component_spec\": \"{\\\"implementation\\\": {\\\"container\\\": {\\\"args\\\": [\\\"kubectl -n katulu-fl delete --ignore-not-found=true virtualservice,svc,cm -l workflows.argoproj.io/workflow={{workflow.name}}\\\"], \\\"command\\\": [\\\"sh\\\", \\\"-c\\\"], \\\"image\\\": \\\"gcr.io/cloud-builders/kubectl\\\"}}, \\\"name\\\": \\\"Cleanup Flower Server Infrastructure\\\"}\", \"pipelines.kubeflow.org/component_ref\": \"{}\"}}}, {\"name\": \"create-fl-client-image\", \"inputs\": {\"parameters\": [{\"name\": \"image_tag\"}, {\"name\": \"num_rounds\"}]}, \"dag\": {\"tasks\": [{\"name\": \"exit-handler-1\", \"template\": \"exit-handler-1\", \"arguments\": {\"parameters\": [{\"name\": \"image_tag\", \"value\": \"{{inputs.parameters.image_tag}}\"}, {\"name\": \"num_rounds\", \"value\": \"{{inputs.parameters.num_rounds}}\"}]}}]}}, {\"name\": \"exit-handler-1\", \"inputs\": {\"parameters\": [{\"name\": \"image_tag\"}, {\"name\": \"num_rounds\"}]}, \"dag\": {\"tasks\": [{\"name\": \"fl-client-image-builder\", \"template\": \"fl-client-image-builder\", \"dependencies\": [\"prepare-build-context\"], \"arguments\": {\"parameters\": [{\"name\": \"image_tag\", \"value\": \"{{inputs.parameters.image_tag}}\"}], \"artifacts\": [{\"name\": \"prepare-build-context-build_context_path\", \"from\": \"{{tasks.prepare-build-context.outputs.artifacts.prepare-build-context-build_context_path}}\"}]}}, {\"name\": \"flower-server\", \"template\": \"flower-server\", \"dependencies\": [\"setup-flower-server-infrastructure\"], \"arguments\": {\"parameters\": [{\"name\": \"num_rounds\", \"value\": \"{{inputs.parameters.num_rounds}}\"}]}}, {\"name\": \"prepare-build-context\", \"template\": \"prepare-build-context\"}, {\"name\": \"setup-flower-server-infrastructure\", \"template\": \"setup-flower-server-infrastructure\"}]}}, {\"name\": \"fl-client-image-builder\", \"container\": {\"args\": [], \"command\": [\"/build.sh\", \"{{inputs.parameters.image_tag}}\", \"/tmp/inputs/build_context_path/data\", \"Dockerfile\", \"/tmp/outputs/image_url/data\"], \"image\": \"ghcr.io/katulu-io/fl-suite/client-image-builder:0.0.0-dev-42a881a\", \"resources\": {\"limits\": {\"smarter-devices/fuse\": \"1\"}, \"requests\": {\"smarter-devices/fuse\": \"1\"}}, \"volumeMounts\": [{\"mountPath\": \"/.docker\", \"name\": \"docker-config\"}]}, \"inputs\": {\"parameters\": [{\"name\": \"image_tag\"}], \"artifacts\": [{\"name\": \"prepare-build-context-build_context_path\", \"path\": \"/tmp/inputs/build_context_path/data\"}]}, \"outputs\": {\"artifacts\": [{\"name\": \"fl-client-image-builder-image_url\", \"path\": \"/tmp/outputs/image_url/data\"}]}, \"metadata\": {\"labels\": {\"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\", \"pipelines.kubeflow.org/pipeline-sdk-type\": \"kfp\", \"pipelines.kubeflow.org/enable_caching\": \"false\"}, \"annotations\": {\"pipelines.kubeflow.org/component_spec\": \"{\\\"implementation\\\": {\\\"container\\\": {\\\"command\\\": [\\\"/build.sh\\\", {\\\"inputValue\\\": \\\"image_tag\\\"}, {\\\"inputPath\\\": \\\"build_context_path\\\"}, {\\\"inputValue\\\": \\\"dockerfile\\\"}, {\\\"outputPath\\\": \\\"image_url\\\"}], \\\"image\\\": \\\"ghcr.io/katulu-io/fl-suite/client-image-builder:0.0.0-dev-42a881a\\\"}}, \\\"inputs\\\": [{\\\"name\\\": \\\"image_tag\\\", \\\"type\\\": \\\"String\\\"}, {\\\"name\\\": \\\"build_context_path\\\", \\\"type\\\": \\\"Directory\\\"}, {\\\"default\\\": \\\"Dockerfile\\\", \\\"name\\\": \\\"dockerfile\\\", \\\"type\\\": \\\"String\\\"}], \\\"name\\\": \\\"FL Client Image Builder\\\", \\\"outputs\\\": [{\\\"name\\\": \\\"image_url\\\", \\\"type\\\": \\\"Path\\\"}]}\", \"pipelines.kubeflow.org/component_ref\": \"{}\", \"pipelines.kubeflow.org/arguments.parameters\": \"{\\\"dockerfile\\\": \\\"Dockerfile\\\", \\\"image_tag\\\": \\\"{{inputs.parameters.image_tag}}\\\"}\"}}, \"volumes\": [{\"name\": \"docker-config\", \"secret\": {\"items\": [{\"key\": \".dockerconfigjson\", \"path\": \"config.json\"}], \"secretName\": \"internal-registry-credentials\"}}]}, {\"name\": \"flower-server\", \"container\": {\"args\": [], \"command\": [\"python3\", \"/pipelines/component/flwr_server.py\", \"--num-rounds\", \"{{inputs.parameters.num_rounds}}\", \"--num-local-rounds\", \"1\", \"--output-path\", \"/tmp/outputs/output_path/data\", \"--metadata-output-path\", \"/tmp/outputs/MLPipeline_ui_metadata/data\"], \"image\": \"ghcr.io/katulu-io/fl-suite/fl-server:0.0.0-dev-42a881a\"}, \"inputs\": {\"parameters\": [{\"name\": \"num_rounds\"}]}, \"outputs\": {\"artifacts\": [{\"name\": \"mlpipeline-ui-metadata\", \"path\": \"/tmp/outputs/MLPipeline_ui_metadata/data\"}, {\"name\": \"flower-server-output_path\", \"path\": \"/tmp/outputs/output_path/data\"}]}, \"metadata\": {\"labels\": {\"katulu/fl-server\": \"flower-server\", \"spire-workload\": \"{{workflow.name}}\", \"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\", \"pipelines.kubeflow.org/pipeline-sdk-type\": \"kfp\", \"pipelines.kubeflow.org/enable_caching\": \"false\"}, \"annotations\": {\"pipelines.kubeflow.org/component_spec\": \"{\\\"description\\\": \\\"Start a Flower server for Federated Learning\\\", \\\"implementation\\\": {\\\"container\\\": {\\\"command\\\": [\\\"python3\\\", \\\"/pipelines/component/flwr_server.py\\\", \\\"--num-rounds\\\", {\\\"inputValue\\\": \\\"num_rounds\\\"}, \\\"--num-local-rounds\\\", {\\\"inputValue\\\": \\\"num_local_rounds\\\"}, \\\"--output-path\\\", {\\\"outputPath\\\": \\\"output_path\\\"}, \\\"--metadata-output-path\\\", {\\\"outputPath\\\": \\\"MLPipeline_ui_metadata\\\"}], \\\"image\\\": \\\"ghcr.io/katulu-io/fl-suite/fl-server:0.0.0-dev-42a881a\\\"}}, \\\"inputs\\\": [{\\\"name\\\": \\\"num_rounds\\\", \\\"type\\\": \\\"Integer\\\"}, {\\\"name\\\": \\\"num_local_rounds\\\", \\\"type\\\": \\\"Integer\\\"}], \\\"metadata\\\": {\\\"labels\\\": {\\\"katulu/fl-server\\\": \\\"flower-server\\\"}}, \\\"name\\\": \\\"Flower Server\\\", \\\"outputs\\\": [{\\\"name\\\": \\\"output_path\\\", \\\"type\\\": \\\"Directory\\\"}, {\\\"name\\\": \\\"MLPipeline_ui_metadata\\\", \\\"type\\\": \\\"UI metadata\\\"}]}\", \"pipelines.kubeflow.org/component_ref\": \"{}\", \"pipelines.kubeflow.org/arguments.parameters\": \"{\\\"num_local_rounds\\\": \\\"1\\\", \\\"num_rounds\\\": \\\"{{inputs.parameters.num_rounds}}\\\"}\"}}, \"sidecars\": [{\"args\": [\"-l\", \"debug\", \"--local-address-ip-version\", \"v4\", \"-c\", \"/run/envoy/envoy.yaml\", \"--base-id\", \"1\"], \"command\": [\"/docker-entrypoint.sh\"], \"image\": \"envoyproxy/envoy:v1.20-latest\", \"name\": \"envoyproxy\", \"volumeMounts\": [{\"mountPath\": \"/run/envoy\", \"name\": \"envoy-config\", \"readOnly\": true}, {\"mountPath\": \"/run/spire/sockets\", \"name\": \"spire-agent-socket\", \"readOnly\": true}]}], \"volumes\": [{\"configMap\": {\"name\": \"{{workflow.name}}-envoyproxy\"}, \"name\": \"envoy-config\"}, {\"hostPath\": {\"path\": \"/run/spire/sockets\", \"type\": \"DirectoryOrCreate\"}, \"name\": \"spire-agent-socket\"}]}, {\"name\": \"prepare-build-context\", \"container\": {\"args\": [], \"command\": [\"/bin/sh\", \"-ex\", \"-c\", \"mkdir -p \\\"$3\\\"\\necho \\\"$2\\\" \u003e \\\"$3/main.py\\\"\\ncat \u003c\u003c EOF \u003e \\\"$3/Dockerfile\\\"\\nFROM $0\\nRUN python -m pip install --no-cache-dir $1\\nCOPY main.py /app/\\nENTRYPOINT [ \\\"python\\\", \\\"/app/main.py\\\" ]\\nEOF\\nls \\\"$3\\\"\", \"python:3.9\", \"numpy\", \"import numpy as np\\nA = np.rand((10, 10))\\nprint(A)\\n\", \"/tmp/outputs/build_context_path/data\"], \"image\": \"alpine\"}, \"outputs\": {\"artifacts\": [{\"name\": \"prepare-build-context-build_context_path\", \"path\": \"/tmp/outputs/build_context_path/data\"}]}, \"metadata\": {\"labels\": {\"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\", \"pipelines.kubeflow.org/pipeline-sdk-type\": \"kfp\", \"pipelines.kubeflow.org/enable_caching\": \"false\"}, \"annotations\": {\"pipelines.kubeflow.org/component_spec\": \"{\\\"implementation\\\": {\\\"container\\\": {\\\"command\\\": [\\\"/bin/sh\\\", \\\"-ex\\\", \\\"-c\\\", \\\"mkdir -p \\\\\\\"$3\\\\\\\"\\\\necho \\\\\\\"$2\\\\\\\" \u003e \\\\\\\"$3/main.py\\\\\\\"\\\\ncat \u003c\u003c EOF \u003e \\\\\\\"$3/Dockerfile\\\\\\\"\\\\nFROM $0\\\\nRUN python -m pip install --no-cache-dir $1\\\\nCOPY main.py /app/\\\\nENTRYPOINT [ \\\\\\\"python\\\\\\\", \\\\\\\"/app/main.py\\\\\\\" ]\\\\nEOF\\\\nls \\\\\\\"$3\\\\\\\"\\\", {\\\"inputValue\\\": \\\"base_image\\\"}, {\\\"inputValue\\\": \\\"pip_packages\\\"}, {\\\"inputValue\\\": \\\"python_script\\\"}, {\\\"outputPath\\\": \\\"build_context_path\\\"}], \\\"image\\\": \\\"alpine\\\"}}, \\\"inputs\\\": [{\\\"name\\\": \\\"base_image\\\", \\\"type\\\": \\\"String\\\"}, {\\\"name\\\": \\\"pip_packages\\\", \\\"type\\\": \\\"String\\\"}, {\\\"name\\\": \\\"python_script\\\", \\\"type\\\": \\\"String\\\"}], \\\"name\\\": \\\"Prepare build context\\\", \\\"outputs\\\": [{\\\"name\\\": \\\"build_context_path\\\", \\\"type\\\": \\\"Directory\\\"}]}\", \"pipelines.kubeflow.org/component_ref\": \"{}\", \"pipelines.kubeflow.org/arguments.parameters\": \"{\\\"base_image\\\": \\\"python:3.9\\\", \\\"pip_packages\\\": \\\"numpy\\\", \\\"python_script\\\": \\\"import numpy as np\\\\nA = np.rand((10, 10))\\\\nprint(A)\\\\n\\\"}\"}}}, {\"name\": \"setup-flower-server-infrastructure\", \"container\": {\"args\": [\"kubectl apply -f - \u003c\u003c EOF \u0026\u0026 mkdir -p $(dirname \\\"$0\\\") \u0026\u0026 kubectl -n katulu-fl get virtualservice \\\"{{workflow.name}}\\\" -o jsonpath=\\\"{ .spec.hosts[0] }\\\" \u003e \\\"$0\\\" \\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: \\\"{{workflow.name}}\\\"\\n  namespace: katulu-fl\\n  labels:\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\nspec:\\n  gateways:\\n    - flower-server-envoyproxy\\n  hosts:\\n    - \\\"{{workflow.name}}.fl.katulu.io\\\"\\n  tls:\\n    - match:\\n        - port: 443\\n          sniHosts:\\n            - \\\"{{workflow.name}}.fl.katulu.io\\\"\\n      route:\\n        - destination:\\n            host: \\\"{{workflow.name}}-envoyproxy\\\"\\n            port:\\n              number: 9001\\n\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: \\\"{{workflow.name}}-flower-server\\\"\\n  namespace: katulu-fl\\n  labels:\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\nspec:\\n  selector:\\n    spire-workload: \\\"{{workflow.name}}\\\"\\n  ports:\\n    - name: grpc\\n      protocol: TCP\\n      port: 8080\\n      targetPort: 8080\\n\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: \\\"{{workflow.name}}-envoyproxy\\\"\\n  namespace: katulu-fl\\n  labels:\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\nspec:\\n  selector:\\n    spire-workload: \\\"{{workflow.name}}\\\"\\n  ports:\\n    - name: grpc\\n      port: 9001\\n      targetPort: 9001\\n      protocol: TCP\\n\\n---\\napiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: \\\"{{workflow.name}}-envoyproxy\\\"\\n  namespace: katulu-fl\\n  labels:\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\ndata:\\n  envoy.yaml: |\\n    ---\\n    node:\\n      id: \\\"{{workflow.name}}\\\"\\n      cluster: local-k8s\\n    static_resources:\\n      listeners:\\n        - name: local_service\\n          address:\\n            socket_address:\\n              address: 0.0.0.0\\n              port_value: 9001\\n          filter_chains:\\n            - filters:\\n              - name: envoy.filters.network.http_connection_manager\\n                typed_config:\\n                  \\\"@type\\\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\n                  set_current_client_cert_details:\\n                    uri: true\\n                  codec_type: AUTO\\n                  stat_prefix: tls-http-listener\\n                  access_log:\\n                    - name: envoy.file_access_log\\n                      config:\\n                        path: \\\"/dev/stdout\\\"\\n                  route_config:\\n                    name: local_route\\n                    virtual_hosts:\\n                      - name: flower-server\\n                        domains:\\n                          - \\\"*\\\"\\n                        routes:\\n                          - match:\\n                              prefix: \\\"/\\\"\\n                            route:\\n                              cluster: flower-server\\n                  access_log:\\n                    - name: file\\n                      typed_config:\\n                        \\\"@type\\\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\\n                        path: /dev/stdout\\n                  http_filters:\\n                    - name: envoy.filters.http.router\\n              transport_socket:\\n                name: envoy.transport_sockets.tls\\n                typed_config:\\n                  \\\"@type\\\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext\\n                  common_tls_context:\\n                    tls_certificate_sds_secret_configs:\\n                      - name: spiffe://katulu.io/{{workflow.name}}\\n                        sds_config:\\n                          resource_api_version: V3\\n                          api_config_source:\\n                            api_type: GRPC\\n                            transport_api_version: V3\\n                            grpc_services:\\n                              envoy_grpc:\\n                                cluster_name: spire_agent\\n                    combined_validation_context:\\n                      default_validation_context:\\n                        match_subject_alt_names:\\n                          exact: spiffe://katulu.io/flower-client\\n                      validation_context_sds_secret_config:\\n                        name: spiffe://katulu.io\\n                        sds_config:\\n                          resource_api_version: V3\\n                          api_config_source:\\n                            api_type: GRPC\\n                            transport_api_version: V3\\n                            grpc_services:\\n                              envoy_grpc:\\n                                cluster_name: spire_agent\\n      clusters:\\n        - name: spire_agent\\n          connect_timeout: 1s\\n          type: STATIC\\n          lb_policy: ROUND_ROBIN\\n          typed_extension_protocol_options:\\n            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\\n              \\\"@type\\\": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\\n              explicit_http_config:\\n                http2_protocol_options: {}\\n          load_assignment:\\n            cluster_name: spire_agent\\n            endpoints:\\n              - lb_endpoints:\\n                - endpoint:\\n                    address:\\n                      pipe:\\n                        path: /run/spire/sockets/agent.sock\\n        - name: flower-server\\n          connect_timeout: 1s\\n          type: strict_dns\\n          typed_extension_protocol_options:\\n            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\\n              \\\"@type\\\": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\\n              explicit_http_config:\\n                http2_protocol_options: {}\\n          load_assignment:\\n            cluster_name: flower-server\\n            endpoints:\\n              - lb_endpoints:\\n                - endpoint:\\n                    address:\\n                      socket_address:\\n                        address: \\\"{{workflow.name}}-flower-server\\\"\\n                        port_value: 8080\\nEOF\", \"/tmp/outputs/flower_server_sni/data\"], \"command\": [\"sh\", \"-c\"], \"image\": \"gcr.io/cloud-builders/kubectl\"}, \"outputs\": {\"artifacts\": [{\"name\": \"setup-flower-server-infrastructure-flower_server_sni\", \"path\": \"/tmp/outputs/flower_server_sni/data\"}]}, \"metadata\": {\"labels\": {\"pipelines.kubeflow.org/kfp_sdk_version\": \"1.8.12\", \"pipelines.kubeflow.org/pipeline-sdk-type\": \"kfp\", \"pipelines.kubeflow.org/enable_caching\": \"false\"}, \"annotations\": {\"pipelines.kubeflow.org/component_spec\": \"{\\\"implementation\\\": {\\\"container\\\": {\\\"args\\\": [\\\"kubectl apply -f - \u003c\u003c EOF \u0026\u0026 mkdir -p $(dirname \\\\\\\"$0\\\\\\\") \u0026\u0026 kubectl -n katulu-fl get virtualservice \\\\\\\"{{workflow.name}}\\\\\\\" -o jsonpath=\\\\\\\"{ .spec.hosts[0] }\\\\\\\" \u003e \\\\\\\"$0\\\\\\\" \\\\n---\\\\napiVersion: networking.istio.io/v1alpha3\\\\nkind: VirtualService\\\\nmetadata:\\\\n  name: \\\\\\\"{{workflow.name}}\\\\\\\"\\\\n  namespace: katulu-fl\\\\n  labels:\\\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\\\nspec:\\\\n  gateways:\\\\n    - flower-server-envoyproxy\\\\n  hosts:\\\\n    - \\\\\\\"{{workflow.name}}.fl.katulu.io\\\\\\\"\\\\n  tls:\\\\n    - match:\\\\n        - port: 443\\\\n          sniHosts:\\\\n            - \\\\\\\"{{workflow.name}}.fl.katulu.io\\\\\\\"\\\\n      route:\\\\n        - destination:\\\\n            host: \\\\\\\"{{workflow.name}}-envoyproxy\\\\\\\"\\\\n            port:\\\\n              number: 9001\\\\n\\\\n---\\\\napiVersion: v1\\\\nkind: Service\\\\nmetadata:\\\\n  name: \\\\\\\"{{workflow.name}}-flower-server\\\\\\\"\\\\n  namespace: katulu-fl\\\\n  labels:\\\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\\\nspec:\\\\n  selector:\\\\n    spire-workload: \\\\\\\"{{workflow.name}}\\\\\\\"\\\\n  ports:\\\\n    - name: grpc\\\\n      protocol: TCP\\\\n      port: 8080\\\\n      targetPort: 8080\\\\n\\\\n---\\\\napiVersion: v1\\\\nkind: Service\\\\nmetadata:\\\\n  name: \\\\\\\"{{workflow.name}}-envoyproxy\\\\\\\"\\\\n  namespace: katulu-fl\\\\n  labels:\\\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\\\nspec:\\\\n  selector:\\\\n    spire-workload: \\\\\\\"{{workflow.name}}\\\\\\\"\\\\n  ports:\\\\n    - name: grpc\\\\n      port: 9001\\\\n      targetPort: 9001\\\\n      protocol: TCP\\\\n\\\\n---\\\\napiVersion: v1\\\\nkind: ConfigMap\\\\nmetadata:\\\\n  name: \\\\\\\"{{workflow.name}}-envoyproxy\\\\\\\"\\\\n  namespace: katulu-fl\\\\n  labels:\\\\n    workflows.argoproj.io/workflow: {{workflow.name}}\\\\ndata:\\\\n  envoy.yaml: |\\\\n    ---\\\\n    node:\\\\n      id: \\\\\\\"{{workflow.name}}\\\\\\\"\\\\n      cluster: local-k8s\\\\n    static_resources:\\\\n      listeners:\\\\n        - name: local_service\\\\n          address:\\\\n            socket_address:\\\\n              address: 0.0.0.0\\\\n              port_value: 9001\\\\n          filter_chains:\\\\n            - filters:\\\\n              - name: envoy.filters.network.http_connection_manager\\\\n                typed_config:\\\\n                  \\\\\\\"@type\\\\\\\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\\\n                  set_current_client_cert_details:\\\\n                    uri: true\\\\n                  codec_type: AUTO\\\\n                  stat_prefix: tls-http-listener\\\\n                  access_log:\\\\n                    - name: envoy.file_access_log\\\\n                      config:\\\\n                        path: \\\\\\\"/dev/stdout\\\\\\\"\\\\n                  route_config:\\\\n                    name: local_route\\\\n                    virtual_hosts:\\\\n                      - name: flower-server\\\\n                        domains:\\\\n                          - \\\\\\\"*\\\\\\\"\\\\n                        routes:\\\\n                          - match:\\\\n                              prefix: \\\\\\\"/\\\\\\\"\\\\n                            route:\\\\n                              cluster: flower-server\\\\n                  access_log:\\\\n                    - name: file\\\\n                      typed_config:\\\\n                        \\\\\\\"@type\\\\\\\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\\\\n                        path: /dev/stdout\\\\n                  http_filters:\\\\n                    - name: envoy.filters.http.router\\\\n              transport_socket:\\\\n                name: envoy.transport_sockets.tls\\\\n                typed_config:\\\\n                  \\\\\\\"@type\\\\\\\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext\\\\n                  common_tls_context:\\\\n                    tls_certificate_sds_secret_configs:\\\\n                      - name: spiffe://katulu.io/{{workflow.name}}\\\\n                        sds_config:\\\\n                          resource_api_version: V3\\\\n                          api_config_source:\\\\n                            api_type: GRPC\\\\n                            transport_api_version: V3\\\\n                            grpc_services:\\\\n                              envoy_grpc:\\\\n                                cluster_name: spire_agent\\\\n                    combined_validation_context:\\\\n                      default_validation_context:\\\\n                        match_subject_alt_names:\\\\n                          exact: spiffe://katulu.io/flower-client\\\\n                      validation_context_sds_secret_config:\\\\n                        name: spiffe://katulu.io\\\\n                        sds_config:\\\\n                          resource_api_version: V3\\\\n                          api_config_source:\\\\n                            api_type: GRPC\\\\n                            transport_api_version: V3\\\\n                            grpc_services:\\\\n                              envoy_grpc:\\\\n                                cluster_name: spire_agent\\\\n      clusters:\\\\n        - name: spire_agent\\\\n          connect_timeout: 1s\\\\n          type: STATIC\\\\n          lb_policy: ROUND_ROBIN\\\\n          typed_extension_protocol_options:\\\\n            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\\\\n              \\\\\\\"@type\\\\\\\": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\\\\n              explicit_http_config:\\\\n                http2_protocol_options: {}\\\\n          load_assignment:\\\\n            cluster_name: spire_agent\\\\n            endpoints:\\\\n              - lb_endpoints:\\\\n                - endpoint:\\\\n                    address:\\\\n                      pipe:\\\\n                        path: /run/spire/sockets/agent.sock\\\\n        - name: flower-server\\\\n          connect_timeout: 1s\\\\n          type: strict_dns\\\\n          typed_extension_protocol_options:\\\\n            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\\\\n              \\\\\\\"@type\\\\\\\": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\\\\n              explicit_http_config:\\\\n                http2_protocol_options: {}\\\\n          load_assignment:\\\\n            cluster_name: flower-server\\\\n            endpoints:\\\\n              - lb_endpoints:\\\\n                - endpoint:\\\\n                    address:\\\\n                      socket_address:\\\\n                        address: \\\\\\\"{{workflow.name}}-flower-server\\\\\\\"\\\\n                        port_value: 8080\\\\nEOF\\\", {\\\"outputPath\\\": \\\"flower_server_sni\\\"}], \\\"command\\\": [\\\"sh\\\", \\\"-c\\\"], \\\"image\\\": \\\"gcr.io/cloud-builders/kubectl\\\"}}, \\\"name\\\": \\\"Setup Flower Server Infrastructure\\\", \\\"outputs\\\": [{\\\"name\\\": \\\"flower_server_sni\\\", \\\"type\\\": \\\"Path\\\"}]}\", \"pipelines.kubeflow.org/component_ref\": \"{}\"}}}], \"arguments\": {\"parameters\": [{\"name\": \"image_tag\"}, {\"name\": \"num_rounds\"}]}, \"serviceAccountName\": \"pipeline-runner\", \"imagePullSecrets\": [{\"name\": \"regcred\"}], \"onExit\": \"cleanup-flower-server-infrastructure\"}}",
        "parameters": [
          { "name": "image_tag", "value": "foo:0.1" },
          { "name": "num_rounds", "value": "3" }
        ]
      },
      "resource_references": [
        {
          "key": {
            "type": "EXPERIMENT",
            "id": "127cb0de-1d5d-41c0-ae46-73d08fa22b5c"
          },
          "name": "Default",
          "relationship": "OWNER"
        }
      ],
      "service_account": "default-editor",
      "created_at": "2022-05-09T12:47:59Z",
      "scheduled_at": "1970-01-01T00:00:00Z",
      "finished_at": "1970-01-01T00:00:00Z",
      "status": "Running"
    }
  ],
  "total_size": 1
}
`

var RunResponseWithWorkflowManifest = `
{
  "run": {
    "id": "fa05261f-4d37-4d51-821b-0bc76b5825da",
    "name": "Run of pipeline (59130)",
    "service_account": "default-editor",
    "status": "Running"
  },
  "pipeline_runtime": {
    "workflow_manifest": "{ \"metadata\": { \"name\": \"create-fl-client-image-4jx7c\" }, \"status\": { \"nodes\": { \"create-fl-client-image-4jx7c-2015089401\": { \"templateName\": \"fl-client-image-builder\", \"outputs\": { \"artifacts\": [ { \"name\": \"fl-client-image-builder-image_url\", \"path\": \"/tmp/outputs/output/data\", \"s3\": { \"key\": \"artifacts/pod-name/fl-client-image-builder-image_url.tgz\" } }, { \"name\": \"main-logs\", \"s3\": { \"key\": \"artifacts/pod-name/main.log\" } } ] } } } } }"
  }
}
`

var RunResponseWithEmptyWorkflowManifest = `
{
  "run": {
    "id": "97ee331f-7d26-4755-a58b-c99b54189e6a",
    "name": "Run of pipeline (95301)"
  },
  "pipeline_runtime": {
    "workflow_manifest": ""
  }
}
`
